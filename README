                           Extended Tcl (TclX) 7.5a
                           ========================

TclX 7.5 Beta 2 Release
========================

This is the first TclX beta release that is compatible with the Tcl 7.5 /
Tk 4.1 beta line.  Its is known to work with the Tcl/Tk beta 2 releases.

Shared library support has been added.  It needs a lot of testing
on different platforms.  Please try it (configure --enable-shared).

No support is currently available for MS Windows or the MacIntosh.  We
are interested in supporting these platforms, but don't have the time
or expertise to do it in the near future.  If anyone is interested in
working with us on these port, we would like to do it in the same manner
as Tcl and Tk.  Please contact us if you would like to help.   We will
handle merge changes into the source tree and making changes available.
Please contact us at tcl-project@neosoft.com if you think you can help.

INTRODUCTION
============

    Extended Tcl (TclX), is a set of extensions to Tcl 7.5, the Tool Command
Language invented by Dr. John Ousterhout at the University of California at
Berkeley.  Tcl is a powerful, yet simple embeddable programming language.
Extended Tcl is oriented towards Unix system programming tasks and large
application development.  Many additional interfaces to the Unix operating
system are provided.  It is upwardly compatible with Tcl 7.5.  You take the
Extended Tcl package, add it to Tcl 7.5, and from that you get Extended Tcl.
(Tcl is not included in this distribution, obtain it from ftp.smli.com).

   Support is also included for building a Tk 4.0 wish shell (wishx)
with the Extended Tcl command set.

   While this TclX distribution is tested with Tcl 7.5 and Tk 4.0, it will
probably work with new versions of Tcl & Tk with little or no changes.

   Extended Tcl was designed and implemented by Karl Lehenbauer
(karl@NeoSoft.com) and Mark Diekhans (markd@Grizzly.com), with help
in the early stages from Peter da Silva (peter@NeoSoft.com).

   As with Berkeley Tcl, all of Extended Tcl is freely
redistributable, including for commercial use and resale.

   Please read the file INSTALL carefully before building and
installing Extended Tcl.

CHANGES IN TCLX 7.5a
====================

  o The TclX runtime is no longer independent of the standard Tcl and
    Tk runtimes.  Tcl & Tk must be installed (or the TCL_LIBRARY and
    TK_LIBRARY environment variables set) before building or running
    TclX.  Tcl_Init must now be called before TclX_Init and Tk_Init
    before TkX_Init.

  o Dropped support for the C++ interfaces in tcl++.h.   This file was
    outdated, not documented and of limited usefulness.  It was often
    a source of portability problems.  If you need this support,
    tcl++.h and tcl++.C from a previous release should work.  Contact
    us if this causes you problems.

  o Added support for building shared libraries on systems where shared
    library support is implemented by Tcl.

  o Added support for doing event driven programming in the TclX shell.

  o Deprecated server_* commands in favor of new Tcl socket command.
    The server_info command has been renamed to host_info and the
    server_cntl functionallity has been incorporated in the fcntl
    command.  All old scripts using the server_* commands will continue
    to work.

FEATURES ADDED BY EXTENDED TCL
==============================

   Here is a summary of the features added by Extended Tcl.  For
more details on the commands and functionality provided by Extended
Tcl, see the manual page man/TclX.man.

    o A shell, which provides an environment for developing and
      executing Tcl programs.  It also supports event driven programming
      outside of Tk.

    o Advanced Tcl code library facility that is oriented towards building
      large applications.  It is compatible with standard Tcl auto-loading.

    o General purpose commands which define new programming
      constructs,  debugging and profiling facilities.

    o Unix access commands provide access to many Unix system calls,
      including process management.

    o File I/O commands provide added facilities for accessing and
      manipulating open files.

    o File scanning facility that provides awk-like functionality.

    o Extended list manipulation commands.

    o Keyed lists, a type of list that provides functionality
      similar to C structures.

    o Extended string and character manipulation commands.

    o Online help on Tcl, TclX and Tk commands.

    o A simple interface for accessing and building TCP/IP based servers.

    o X/PG based internationalization commands.

ON-LINE HELP
============

    There is a help system included with Extended Tcl.  It contains
some documentation on every command in Berkeley Tcl, Extended Tcl
and Tk.  You can invoke it interactively from within Extended Tcl by
typing "help".

    Once you bring Tcl up and have gotten it to pass all the tests,
try typing "help help" to learn how to use help.

    There is also a Tk based help program "tclhelp".

MANUAL PAGES
============

    Man pages in nroff/troff format are provided for all of Tcl and
the extensions in the directory tclX7.5a/man.  Start with the
TclX.n manual.

EXTENDED TCL VERSION NAMING
===========================

    Extended Tcl takes its version number from the corresponding
version of Berkeley (Ousterhout) Tcl upon which it is based, with
the addition of a trailing letter in case there are multiple
releases of Extended Tcl within a single release of Berkeley Tcl.
This release is TclX 7.5a.

PACKAGE LIBRARIES
=================

    Package Libraries are a Tcl source code management tool included
in this release.  Package libraries allow you to group Tcl
procedures into logical bundles and create single files, libraries,
that contain multiple packages.  The package code provides a
low-overhead means of automatically demand-loading a package on the
first attempt to execute one of the procedures defined within it.
As such, package libraries provide a mechanism to accommodate the
creation of Tcl applications and libraries of a substantial size.
The TclX library mechanism is a super-set of the mechanism provided
with standard Tcl.

LINKING APPLICATIONS AND EXTENSION WITH TCLX
============================================

   There are three basic approaches to linking TclX into applications or
with other extensions:

   o Dynamically load the C code using either 'package require' or
     the 'load' command.

   o Linking TclX into an application based on the standard Tcl or Tk
     shells (tclsh or wish) or based on your own startup.

   o Build an application based on the TclX shells (tcl or wishx).

See the TclXInit.3 manual page for more details.

SUPPORT FOR EXTENDED TCL
========================

    We are committed to providing continuing support for Extended
Tcl.  Please send questions, bug reports, and bug fixes to:

         tcl-project@NeoSoft.com

WHERE TO GET IT
===============

Extended Tcl 7.5a can be downloaded by anonymous FTP from:

   ftp.neosoft.com:/pub/tcl/distrib/tclX7.5a.tar.gz
or
   ftp.aud.alcatel.com:tcl/extensions/tclX7.5a.tar.gz

Always check ftp.neosoft.com first, as there is often a delay in
updating the Alcatel archives.

A contributed sources archive resides on ftp.aud.alcatel.com and
is mirrored on ftp.ibp.fr for our friends in Europe.  An Frequently
Asked Questions (FAQ) document exists in this archive.

Remember to mail Extended Tcl problems and questions to
tcl-project@NeoSoft.com not Dr. John Ousterhout.

THANKS
======

  A big thanks to all of the Extended Tcl users from all over the world
who have helped us debug problems and given us valuable suggestions.
A special thanks to John Ousterhout and his team at Sun for Tcl, Tk and
all the support they have given us.

Thanks to Dr. Joseph E. Sacco <jsacco@ssl.com> for his initial work on
building shared libraries.

NEOSOFT TCL CONSULTING
======================

  NeoSoft, co-developers of Extended Tcl, provides commercial Tcl
releases, support, training and consulting.  NeoSoft can be reached 
by sending electronic mail to info@NeoSoft.com or by phoning 
+1 713 968-5800.
