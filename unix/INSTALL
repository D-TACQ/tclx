EXTENDED TCL SOURCE DIRECTORY HIERARCHY
=======================================

Building the Extended Tcl requires access to built Tcl and Tk source
directories.  Their location relative to the tclX7.0a directory must be
configured by editing tclX7.0a/Config.mk.  The default is to place tclX7.0a
in a directory parallel to the Tcl and Tk distributions:

                   tcl7.0      tk3.3      tclX7.0a


The following directories are included under the tclX7.0a directory:

    o config - Configuration files for various Unix versions.

    o man - Unformated manual pages for TclX.

    o src - The main source for TclX.

    o osSupport - Library routines required by TclX that may not be available
      on all Unix versions. 

    o ucbsrc - A makefile and sed scripts used to modify source files that
      are supplied with UCB Tcl to add signal handling.  The files are modified
      with sed so you don't have to have patch to build Tcl, however context
      diffs are provided if problems occur porting to a new version of Tcl.

    o tclsrc - Tcl source that is built into the standard Tcl package library.
      The makefile also handles generation of help files and copying man file
      into the master directory

    o tclmaster - Tcl master directory.  All files required to run TclX
      are build or copied into this directory.  The entire contents of
      this directory are installed.

    o tests - Tests for TclX.

    o tksrc - A makefile that builds a version of the Tk wish shell containing
      Extended Tcl.

    o tkucbsrc - A makefile and sed scripts used to modify source files that
      are supplied with Tk to add signal handling.  Context diffs are also
      provided.

    o tkmaster - Tk master directory.  All files required to run Tk
      are built or copied into this directory.  The entire contents of
      this directory are installed.

    o tktests - Files used to test wishx.

    o experimental - An directory of expermintal and contributed Tcl source.
      The code is not normally built as part of TclX.

    o tools - Tools used for building and installing TclX.

HOW TO BUILD EXTENDED TCL
=========================

    o Configure and compile Tcl 7.0 following the instructions the comes with
      Tcl.  You do not need to install it.

    o If you are using a make were the make include format is:
          `.include "file"'
      instead of
          `include file'
      enter the command:
          sh tools/editmkincl.sh
      To convert all of the Makefile.  You need only do this once.

    o If you are going to be using Tk and want to build an Extended Tcl wish
      shell (wishx), configure and compile Tk 3.3.  You do not need to install
      it.

    o Edit Config.mk following the instructions in that file. You must set
      TCL_CONFIG_FILE to the name of the file in the config directory.
      If you are not going to build wishx, comment out the line defining
      TK_BUILD.

    o TCL_CONFIG_FILE contains the name of a file in the config directory that
      defines your machine-specific configuration.  If there is not one there
      for you system you will have to construct on.  Use a similar system as a
      template and read Config.mk for a description of the attributes and
      flags that can be defined.  If you create a new configuration file,
      send it to us.

    o Note that the site specific installation options should be set in
      Config.mk before compiling.  It is especially important to set the value
      for TCL_MASTERDIR and TK_MASTERDIR in Config.mk before compiling TclX.
      See the section on "Installing Extended Tcl" for more details.

    o Now do a "make".  If all goes well, this will build an extended
      "libtclx.a" and the "tcl" executable in the tclmaster directory.  If Tk
      is requested, an extended "libtkx.a" and "wishx" executable will be
      built in the tkmaster directory.

    o Until the Extended Tcl runtime files are installed, "tcl" and "wishx"
      can't be run directly.  To run them before installation, use "runtcl" or
      "runwishx".

    o Extended Tcl comes with help pages that are built from the Tcl 7.0 and
      Tk 3.3 manual pages as well as the TclX manual page.  If you are building
      TclX with an later version of Tcl or Tk, you might want to rebuild these
      manual pages.  If new manual pages have been added, you can add them
      by editing the files "tools/tclmanpages" and "tools/tkmanpages".
      You must have nroff and the man macro package installed on your system
      to build the manual pages.  Enter "make buildtclhelp" to build the
      Tcl and TclX help pages and "make buildtkhelp" to build the Tk manual
      pages or "make buildhelp" to build both.


   We have a limited number of systems available to test Extended Tcl on,
we need your help in supporting TclX on a wide range of platforms.  The nature
of the functionality TclX supports mean a great deal of system dependent code.
Thanks to all of those who have submitted configuration files and changes to
TclX.

TESTING EXTENDED TCL
====================

   There are three sets of tests: the tests from Berkeley Tcl, the tests for
Tk and the tests for Extended Tcl, which test both the new commands added by
Extended Tcl and the procedures defined in the Extended Tcl procedure
library.

    o Run both the Berkeley and TclX tests by typing "make test" in the
      tclX7.0a directory.

    o To run the Tk tests with wishx, type "make tktest".

    o The Extended Tcl tests may be run by themselves with "make extdtests".

    o If a test fails, please dig into the test and the C source for the
      function being tested, fix the bug and mail us the change.  If you're
      not inclined to do this, please report the problem, including the output
      of the test, to tcl-project@neosoft.com.  Sometimes tests fail due to
      problems in the system environment or bugs in that test rather than
      problems with TclX.  Even if a few of the tests fail, you probably still
      have a working TclX.  See the "Porting Notes" section of this document
      for problems we have encountered.

    o If you're having trouble with the Berkeley tests, and you suspect that
      the extensions might be involved, you can build a special minimal
      version of Berkeley Tcl by cd'ing to the tcl7.0 directory and doing
      a "make test".

INSTALLING EXTENDED TCL
=======================


???Section not yet complete????
   All
  The Extended Tcl install script
     install the Tcl manual pages and a super-set libtcl.a.  The standard
     Tcl library procs will be added to a TclX .tlib library instead of being
     installed as separate files.

    To install Extended Tcl, edit the tclX7.0a/Config.mk installation
configuration section to match your preferences. Read the information in 
Config.mk carefully before configuring it.  TCL_MASTERDIR must have been
set before compiling TclX.

    The master directory name will have the Tcl version number appended to
it, which allows multiple versions of Tcl to be installed.???

    Cd to the tclX7.0a directory and do a "make install" (normally as root).
This will install include files and manual pages for Berkeley Tcl and TclX, as
well as the TclX binary and library.

PORTING NOTES
=============

DEC Ultrix:

   o Several tests fail when Tcl is run on an NFS mounted file system.
