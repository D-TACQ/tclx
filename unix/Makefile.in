#
# Makefile --
#
# Top-level makefile for Extended Tcl.
# 
#------------------------------------------------------------------------------
# Copyright 1992-1993 Karl Lehenbauer and Mark Diekhans.
#
# Permission to use, copy, modify, and distribute this software and its
# documentation for any purpose and without fee is hereby granted, provided
# that the above copyright notice appear in all copies.  Karl Lehenbauer and
# Mark Diekhans make no representations about the suitability of this
# software for any purpose.  It is provided "as is" without express or
# implied warranty.
#------------------------------------------------------------------------------
# $Id: Makefile.in,v 2.18 1993/09/08 06:32:21 markd Exp markd $
#------------------------------------------------------------------------------
#
SHELL=/bin/sh

#------------------------------------------------------------------------------
# Autoconfig defines that can be overridden in Config.mk

CC         = @CC@
RANLIB     = @RANLIB@
srcdir     = @srcdir@
srcbasedir = @srcbasedir@
bldbasedir = @bldbasedir@
VPATH      = @srcdir@

#------------------------------------------------------------------------------
# Include user-editable defines.

@MAKEINCLUDE@ @MAKEQUOTE@${srcbasedir}/Config.mk@MAKEQUOTE@

#------------------------------------------------------------------------------
# Flags that were passed on the command line that are to be passed on to
# second level makes.

PASS_FLAGS = "CC=$(CC)" "CFLAGS=$(CFLAGS)"

#------------------------------------------------------------------------------
# The made.tmp files are used to indicate a makefile has successfully added
# it's .o files to a library.  We need to purge the right ones one a new
# library is copied.

TCLMADE.TMP = osSupport/made.tmp src/made.tmp
TKMADE.TMP  = tksrc/made.tmp

#------------------------------------------------------------------------------

all: TCLX runtcl ${TK_BUILD}

#------------------------------------------------------------------------------
# Compile the Extended Tcl library and link the Tcl shell.
#

TCLX: TCLCOPY runtcl
	cd tools;     ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} all
	cd osSupport; ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} all
	cd src;       ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} all
	cd tclsrc;    ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} all

#------------------------------------------------------------------------------
# Copy include and library files from the UCB Tcl distribution to the
# tclmaster directory.
#
LIBTCL.A = tclmaster/lib/libtcl.a
TCL.H    = tclmaster/include/tcl.h

TCLCOPY: MKTCLDIRS ${LIBTCL.A} ${TCL.H}

MKTCLDIRS:
	-mkdir tclmaster         2>/dev/null; exit 0
	-mkdir tclmaster/lib     2>/dev/null; exit 0
	-mkdir tclmaster/include 2>/dev/null; exit 0
	-mkdir tclmaster/bin     2>/dev/null; exit 0

${LIBTCL.A}: ${TCL_UCB_LIB}/libtcl.a
	rm -f ${LIBTCL.A}
	cp ${TCL_UCB_LIB}/libtcl.a ${LIBTCL.A}
	${RANLIB} ${LIBTCL.A}

${TCL.H}: ${TCL_UCB_LIB}/tcl.h
	rm -f ${TCL.H}
	cp ${TCL_UCB_LIB}/tcl.h ${TCL.H}

#------------------------------------------------------------------------------
# Generate a wish shell {wishx} with Extended Tcl commands.
#

WISHX: TKCOPY runwishx
	cd tksrc;    ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} all
	cd tktclsrc; ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} all

#------------------------------------------------------------------------------
# Copy include and library files from the UCB Tk distribution to the
# tkmaster directory.
#
LIBTK.A = tkmaster/lib/libtk.a
TK.H    = tkmaster/include/tk.h

TKCOPY: MKTKDIRS ${LIBTK.A} ${TK.H}

MKTKDIRS:
	-mkdir tkmaster         2>/dev/null; exit 0
	-mkdir tkmaster/lib     2>/dev/null; exit 0
	-mkdir tkmaster/include 2>/dev/null; exit 0
	-mkdir tkmaster/bin     2>/dev/null; exit 0

${LIBTK.A}: ${TK_UCB_LIB}/libtk.a
	rm -f ${LIBTK.A}
	cp ${TK_UCB_LIB}/libtk.a ${LIBTK.A}
	${RANLIB} ${LIBTK.A}

${TK.H}: ${TK_UCB_LIB}/tk.h
	rm -f ${TK.H}
	cp ${TK_UCB_LIB}/tk.h ${TK.H}

#------------------------------------------------------------------------------
# Generate scripts to point the TCL_LIBRARY/TK_LIBRARY environment variable at
# the local master directories so tcl & wishx can be run before installing.

runtcl:
	@echo ':'                                              >runtcl
	@echo '# script for testing Tcl before installation'  >>runtcl
	@echo "TCL_LIBRARY=`pwd`/tclmaster"                   >>runtcl
	@echo "export TCL_LIBRARY"                            >>runtcl
	@echo "if [ \$$# = 0 ]"                               >>runtcl
	@echo "then"                                          >>runtcl
	@echo "    exec `pwd`/tclmaster/bin/tcl"              >>runtcl
	@echo "else"                                          >>runtcl
	@echo "    exec `pwd`/tclmaster/bin/tcl \"\$$@\""     >>runtcl
	@echo "fi"                                            >>runtcl
	chmod a+rx runtcl

runwishx:
	@echo ':'                                               >runwishx
	@echo '# script for testing wishx before installation' >>runwishx
	@echo "TCL_LIBRARY=`pwd`/tclmaster"                    >>runwishx
	@echo "export TCL_LIBRARY"                             >>runwishx
	@echo "TK_LIBRARY=`pwd`/tkmaster"                      >>runwishx
	@echo "export TK_LIBRARY"                              >>runwishx
	@echo "if [ \$$# = 0 ]"                                >>runwishx
	@echo "then"                                           >>runwishx
	@echo "    exec `pwd`/tkmaster/bin/wishx"              >>runwishx
	@echo "else"                                           >>runwishx
	@echo "    exec `pwd`/tkmaster/bin/wishx \"\$$@\""     >>runwishx
	@echo "fi"                                             >>runwishx
	chmod a+rx runwishx

#------------------------------------------------------------------------------
# Test to see if the C++ include file compiles and links.

tcl++:
	cd src;${MAKE} -${MAKEFLAGS} tcl++

#------------------------------------------------------------------------------
# Run the UCB and Extended Tcl tests.

test: ucbtests extdtests

ucbtests: all
	@echo "***************************************************************"
	@echo "*** Expect warnings about not having the following commands:"
	@echo "***     testasync"
	@echo "***     testcmdinfo"
	@echo "***     testdcall"
	@echo "***     testlink"
	@echo "***     testdstring"
	@echo "*** Expect the following error:"
	@echo "***     Uncaught error in expr.test: unknown math function T1"
	@echo "***************************************************************"
	@echo ""
	./runtcl -c "cd ${TCL_UCB_LIB}/tests;source ${srcbasedir}/tests/all"

extdtests: all
	./runtcl -c "cd tests;source all"	

tktest: all
	@echo "***************************************************************"
	@echo "*** Expect warnings about not having the following commands:"
	@echo "***     testmakexists"
	@echo "***************************************************************"
	@echo ""
	cd tktests ; ../runwishx -f tktests.tcl -n wish ${TK_UCB_LIB}

#------------------------------------------------------------------------------
# Rebuild help files.  The are shipped with TclX, but can be rebuilt if Tcl or
# Tk versions have changed.

buildhelp: buildtclhelp buildtkhelp

buildtclhelp:
	cd tclsrc;   ${MAKE} -${MAKEFLAGS} buildtclhelp

buildtkhelp:
	cd tktclsrc; ${MAKE} -${MAKEFLAGS} buildtkhelp

#------------------------------------------------------------------------------
# Install Tcl.

install: all TCLXINSTALL ${TK_BUILD}MAYBE
	@echo ""
	@echo "*************************************************************"
	@echo "*** TclX currently builds symbolic links to the bin files ***"
	@echo "*** in the master directories.  If you need links to the  ***"
	@echo "*** include or man files you must build them by hand.     ***"
	@echo "*************************************************************"
	@echo ""

TCLXINSTALL:
	@echo ""
	@echo "   Install TclX master directory"
	@echo ""
	set -x ;\
	target=${TCL_MASTERDIR}/`tools/tclxversion` ;\
        (test -d ${TCL_MASTERDIR} || mkdir ${TCL_MASTERDIR}) ;\
	rm -rf $$target ;\
	mkdir $$target  ;\
	(cd tclmaster ; tar -cf - .) | (cd $$target; tar -xf -) ;\
	rm -f ${TCL_BINDIR}/tcl ;\
	ln -s $$target/bin/tcl ${TCL_BINDIR}/tcl

TKXINSTALL:
	@echo ""
	@echo "   Install TkX master directory"
	@echo ""
	set -x ;\
	target=${TK_MASTERDIR}/`tools/tkxversion` ;\
        (test -d ${TK_MASTERDIR} || mkdir ${TK_MASTERDIR}) ;\
	rm -rf $$target ;\
	mkdir $$target  ;\
	(cd tkmaster ; tar -cf - .) | (cd $$target; tar -xf -) ;\
	rm -f ${TCL_BINDIR}/wishx ;\
	ln -s $$target/bin/wishx ${TCL_BINDIR}/wishx ;\
	rm -f ${TCL_BINDIR}/tclhelp ;\
	ln -s $$target/bin/tclhelp ${TCL_BINDIR}/tclhelp

# Fake targets to decide if we install wishx or not.

MAYBE:

WISHXMAYBE: TKXINSTALL

#------------------------------------------------------------------------------
# Clean up everything but the manual pages that we copied to the master
# directories.  This is useful while debugging, as the copy process is slow.

partclean:
	cd tools;     ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} clean
	cd osSupport; ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} clean
	cd src;       ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} clean
	cd tclsrc;    ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} partclean
	cd tksrc;     ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} clean
	cd tktclsrc;  ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} partclean
	-rm -f runtcl runwishx
	-rm -rf tclmaster/bin tclmaster/lib tclmaster/include
	-rm -rf tkmaster/bin tkmaster/lib tkmaster/include

#------------------------------------------------------------------------------
# Clean up all files that were built by make.

clean: partclean
	cd tclsrc;    ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} clean
	cd tktclsrc;  ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} clean

#------------------------------------------------------------------------------
# Restore to the distributed state.

distclean: clean
	cd tools;     ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} distclean
	cd osSupport; ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} distclean
	cd src;       ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} distclean
	cd tclsrc;    ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} distclean
	cd tksrc;     ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} distclean
	cd tktclsrc;  ${MAKE} -${MAKEFLAGS} ${PASS_FLAGS} distclean
	rm -f Makefile config.status

