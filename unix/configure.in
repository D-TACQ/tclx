dnl----------------------------------------------------------------------------
dnl configure.in -
dnl----------------------------------------------------------------------------
dnl  This file is an input file used by the GNU "autoconf" program to
dnl  generate the file "configure", which is run during Tcl installation
dnl  to configure the system for the local environment.  Many of these
dnl  checks are duplicates of those required by Tcl & Tk, since TclX
dnl  includes there internal header files.  The sections from Tcl and Tk
dnl  are grouped together and marked for easy sycning with Outerhout's
dnl  releases.
dnl
dnl  Although the generated configure script is under the GNU Public,
dnl  License Extended Tcl remains freely redistributable for any purpose,
dnl  including commercial use.
dnl----------------------------------------------------------------------------
dnl $Id: configure.in,v 4.10 1995/03/29 04:14:31 markd Exp markd $
dnl----------------------------------------------------------------------------
AC_INIT(src/tclExtend.h)
ifdef([AC_REVISION],AC_REVISION($Revision: 4.10 $),)dnl

AC_CONFIG_HEADER(src/tclXconf.h)

#------------------------------------------------------------------------------
# Check command line looking for the --arch= option.
#------------------------------------------------------------------------------

AC_ARG_WITH(arch, [architecture suffix], [TCL_ARCH=.$withval])
if test "X$TCL_ARCH" = "X" ; then
    AC_MSG_RESULT("No architecture suffix will be used")
else
    AC_MSG_RESULT("An architecture suffix of \"$TCL_ARCH\" will be appended to bin and lib directories")
fi
AC_SUBST(TCL_ARCH)

#------------------------------------------------------------------------------
# Check for various programs used during the build.
#------------------------------------------------------------------------------

AC_PROG_CC
AC_PROG_YACC
AC_PROG_RANLIB
AC_PROG_CXX
if test -n "$CXX"; then
    TCLXX="YES"
else
    TCLXX="NO"
fi
AC_SUBST(TCLXX)

#------------------------------------------------------------------------------
# Purge the specific set of files that must be rebuild if the arch or prefix
# flags are changed.
#------------------------------------------------------------------------------

rm -f tclmaster/bin*/* tclmaster/lib*/* tclmaster/src/SYSLIBS* 2>/dev/null
rm -f tkmaster/bin*/* tkmaster/lib*/* tkmaster/src/SYSLIBS* 2>/dev/null
rm -f src/tclCmdIL.o src/tclXinit.o tksrc/tkWindow.o  */*.tmp 2>/dev/null

#------------------------------------------------------------------------------
#       Some make programs require includes to be 
#         .include "file"
#     others...
#         include file
#------------------------------------------------------------------------------

AC_MSG_CHECKING(how make handles includes)
cat > confmakeinc <<EOF

EOF
  cat > confmakefile <<EOF
include confmakeinc

all:
EOF

if make -f confmakefile >/dev/null 2>/dev/null; then
    MAKEINCLUDE="include"
    MAKEQUOTE=''
    AC_MSG_RESULT(common make include syntax)
else
    MAKEINCLUDE=".include"
    MAKEQUOTE='"'
    AC_MSG_RESULT(BSD make include syntax)
fi
rm confmakefile confmakeinc

AC_SUBST(MAKEINCLUDE)
AC_SUBST(MAKEQUOTE)

#------------------------------------------------------------------------------
#       Check for system header files.
#------------------------------------------------------------------------------

AC_HEADER_CHECK(values.h, , AC_DEFINE(NO_VALUES_H))
AC_HEADER_CHECK(sys/socket.h, , AC_DEFINE(NO_SYS_SOCKET_H))

#------------------------------------------------------------------------------
#       Check for missing typedefs.
#------------------------------------------------------------------------------

AC_CHECK_TYPE(clock_t, long)
AC_CHECK_TYPE(time_t, long)
AC_CHECK_TYPE(off_t, long)

#------------------------------------------------------------------------------
#       What type do signals return?
#------------------------------------------------------------------------------

AC_RETSIGTYPE

#------------------------------------------------------------------------------
#       Find out all about time handling differences.
#------------------------------------------------------------------------------

AC_TIME_WITH_SYS_TIME
AC_STRUCT_TIMEZONE

AC_MSG_CHECKING([tm_tzadj in struct tm])
AC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_tzadj;],
        [AC_DEFINE(HAVE_TM_TZADJ)
         AC_MSG_RESULT(yes)],
        AC_MSG_RESULT(no))

AC_MSG_CHECKING([tm_gmtoff in struct tm])
AC_TRY_COMPILE([#include <time.h>], [struct tm tm; tm.tm_gmtoff;],
        [AC_DEFINE(HAVE_TM_GMTOFF)
         AC_MSG_RESULT(yes)],
        AC_MSG_RESULT(no))

AC_HAVE_FUNCS(gettimeofday)

#
# Its important to include time.h in this check, as some systems (like convex)
# have timezone functions, etc.
#
AC_MSG_CHECKING([timezone variable])
AC_TRY_COMPILE([#include <time.h>],
        [extern long timezone;
         timezone += 1;
         exit (0);],
        [AC_DEFINE(HAVE_TIMEZONE_VAR)
         AC_MSG_RESULT(yes)],
        AC_MSG_RESULT(no))

#------------------------------------------------------------------------------
#     Test to see if "times" returns a status or the amount of
#     elapsed real time.
#------------------------------------------------------------------------------

echo "checking to see if 'times' returns the elapsed real time"
AC_TRY_RUN([
#include <sys/types.h>
#include <sys/times.h>
main() {
struct tms cpu;
times (&cpu);
sleep (2);
if (times (&cpu) > 0)
     exit (0);
else 
     exit (1);
}
], AC_DEFINE(TIMES_RETS_REAL_TIME), ,AC_DEFINE(TIMES_RETS_REAL_TIME))

#------------------------------------------------------------------------------
#     Determine if "." is used as separator for the manual directory
#     names.  i.e. man/man.1 vs man/man1
#------------------------------------------------------------------------------

AC_MSG_CHECKING(man directory/section separator)
mandirs="/usr/man/man.1 /usr/man/cat.1 /usr/share/man.1 /usr/share/cat.1
         /usr/man/u_man/man.1 /usr/man/cat.C"
gotdotdir="NO"
for d in $mandirs
do
    if test -d $d
    then
        gotdotdir="YES"
    fi
done

mandirs="/usr/man/man1   /usr/man/cat1   /usr/share/man1   /usr/share/man1
         /usr/man/man1.Z /usr/man/cat1.Z /usr/share/man1.Z /usr/share/man1.Z
         /usr/man/u_man/man1 /usr/share/man/man1"
gotnodotdir="NO"
for d in $mandirs
do
    if test -d $d
    then
        gotnodotdir="YES"

    fi
done

if test $gotdotdir = YES -a $gotnodotdir = NO
then
    MAN_DIR_SEPARATOR="."
    AC_MSG_RESULT(man/man.1 style)
elif test $gotdotdir = NO -a $gotnodotdir = YES
then
    MAN_DIR_SEPARATOR=""
    AC_MSG_RESULT(man/man1 style)
else
    MAN_DIR_SEPARATOR=""
    AC_MSG_RESULT([WARNING: couldn't determine, assuming man/man1 style])
fi
AC_SUBST(MAN_DIR_SEPARATOR)

#------------------------------------------------------------------------------
# Define srcbasedir and bldbasedir as absolute paths.
#------------------------------------------------------------------------------

srcbasedir=`cd $srcdir;pwd`
AC_SUBST(srcbasedir)
bldbasedir=`pwd`
AC_SUBST(bldbasedir)

#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
#                      Begin code from Tcl configure.in
#------------------------------------------------------------------------------

#--------------------------------------------------------------------
#       Supply substitutes for missing POSIX library procedures, or
#       set flags so Tcl uses alternate procedures.
#--------------------------------------------------------------------

AC_FUNC_CHECK(gettimeofday, , AC_DEFINE(NO_GETTOD))

#--------------------------------------------------------------------
#	On a few very rare systems, all of the libm.a stuff is
#	already in libc.a.  Set compiler flags accordingly.
#	Also, Linux requires the "ieee" library for math to work
#	right.
#--------------------------------------------------------------------

AC_FUNC_CHECK(sin, MATH_LIBS="", MATH_LIBS="-lm")
AC_SUBST(MATH_LIBS)
AC_CHECK_LIB(ieee, main, [MATH_LIBS="$MATH_LIBS -lieee"])

#--------------------------------------------------------------------
#       Supply substitutes for missing POSIX header files.  Special
#       notes:
#           - Sprite's dirent.h exists but is bogus.
#           - stdlib.h doesn't define strtol, strtoul, or
#             strtod insome versions of SunOS
#           - some versions of string.h don't declare procedures such
#             as strstr
#--------------------------------------------------------------------

AC_HAVE_HEADERS(unistd.h)
AC_MSG_CHECKING(dirent.h)
AC_TRY_LINK([#include <sys/types.h>
#include <dirent.h>], [
#ifndef _POSIX_SOURCE
#   ifdef __Lynx__
	/*
	 * Generate compilation error to make the test fail:  Lynx headers
	 * are only valid if really in the POSIX environment.
	 */

	missing_procedure();
#   endif
#endif
DIR *d;
struct dirent *entryPtr;
char *p;
d = opendir("foobar");
entryPtr = readdir(d);
p = entryPtr->d_name;
closedir(d);
], tcl_ok=yes, tcl_ok=no)
AC_HEADER_EGREP([Sprite version.* NOT POSIX], tcl_ok=no)
if test $tcl_ok = no; then
    AC_DEFINE(NO_DIRENT_H)
fi
AC_MSG_RESULT($tcl_ok)
AC_HEADER_CHECK(errno.h, , AC_DEFINE(NO_ERRNO_H))
AC_HEADER_CHECK(float.h, , AC_DEFINE(NO_FLOAT_H))
AC_HEADER_CHECK(limits.h, , AC_DEFINE(NO_LIMITS_H))
AC_HEADER_CHECK(stdlib.h, tcl_ok=1, tcl_ok=0)
AC_HEADER_EGREP(strtol, stdlib.h, , tcl_ok=0)
AC_HEADER_EGREP(strtoul, stdlib.h, , tcl_ok=0)
AC_HEADER_EGREP(strtod, stdlib.h, , tcl_ok=0)
if test $tcl_ok = 0; then
    AC_DEFINE(NO_STDLIB_H)
fi
AC_HEADER_CHECK(string.h, tcl_ok=1, tcl_ok=0)
AC_HEADER_EGREP(strstr, string.h, , tcl_ok=0)
AC_HEADER_EGREP(strerror, string.h, , tcl_ok=0)
if test $tcl_ok = 0; then
    AC_DEFINE(NO_STRING_H)
fi
AC_HEADER_CHECK(sys/time.h, , AC_DEFINE(NO_SYS_TIME_H))
AC_HEADER_CHECK(sys/wait.h, , AC_DEFINE(NO_SYS_WAIT_H))

#--------------------------------------------------------------------
#       Check for various typedefs and provide substitutes if
#       they don't exist.
#--------------------------------------------------------------------

AC_MODE_T
AC_PID_T
AC_SIZE_T
AC_UID_T

#--------------------------------------------------------------------
#       If a system doesn't have an opendir function (man, that's old!)
#       then we have to supply a different version of dirent.h which
#       is compatible with the substitute version of opendir that's
#       provided.  This version only works with V7-style directories.
#--------------------------------------------------------------------

AC_FUNC_CHECK(opendir, , AC_DEFINE(USE_DIRENT2_H))

#--------------------------------------------------------------------
#       The check below checks whether <sys/wait.h> defines the type
#       "union wait" correctly.  It's needed because of weirdness in
#       HP-UX where "union wait" is defined in both the BSD and SYS-V
#       environments.  Checking the usability of WIFEXITED seems to do
#       the trick.
#--------------------------------------------------------------------

AC_MSG_CHECKING([union wait])
AC_TRY_LINK([#include <sys/types.h> 
#include <sys/wait.h>], [
union wait x;
WIFEXITED(x);		/* Generates compiler error if WIFEXITED
			 * uses an int. */
], tcl_ok=yes, tcl_ok=no)
AC_MSG_RESULT($tcl_ok)
if test $tcl_ok = no; then
    AC_DEFINE(NO_UNION_WAIT)
fi

#------------------------------------------------------------------------------
#                       End code from Tcl configure.in
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@


#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
#                      Begin code from Tk configure.in
#------------------------------------------------------------------------------
AC_HAVE_HEADERS(limits.h)

#--------------------------------------------------------------------
#	Include sys/select.h if it exists and if it supplies things
#	that appear to be useful and aren't already in sys/types.h.
#	This appears to be true only on the RS/6000 under AIX.  Some
#	systems like OSF/1 have a sys/select.h that's of no use, and
#	other systems like SCO UNIX have a sys/select.h that's
#	pernicious.  If "fd_set" isn't defined anywhere then set a
#	special flag.
#--------------------------------------------------------------------

AC_MSG_CHECKING([fd_set and sys/select])
AC_TRY_COMPILE([#include <sys/types.h>],
	[fd_set readMask, writeMask;], tk_ok=yes, tk_ok=no)
if test $tk_ok = no; then
    AC_HEADER_EGREP(fd_mask, sys/select.h, tk_ok=yes)
    if test $tk_ok = yes; then
	AC_DEFINE(HAVE_SYS_SELECT_H)
    fi
fi
AC_MSG_RESULT($tk_ok)
if test $tk_ok = no; then
    AC_DEFINE(NO_FD_SET)
fi

#--------------------------------------------------------------------
#	Locate the X11 header files and the X11 library archive.  Try
#	the ac_path_x macro first, but if it doesn't find the X stuff
#	(e.g. because there's no xmkmf program) then check through
#	a list of possible directories.  Under some conditions the
#	autoconf macro will return an include directory that contains
#	no include files, so double-check its result just to be safe.
#--------------------------------------------------------------------

AC_PATH_X
not_really_there=""
if test "$no_x" = ""; then
    if test "$x_includes" = ""; then
	AC_TRY_CPP([#include <X11/XIntrinsic.h>], , not_really_there="yes")
    else
	if test ! -r $x_includes/X11/Intrinsic.h; then
	    not_really_there="yes"
	fi
    fi
fi
if test "$no_x" = "yes" -o "$not_really_there" = "yes"; then
    echo checking for X11 header files
    XINCLUDES="# no special path needed"
    AC_TRY_CPP([#include <X11/Intrinsic.h>], , XINCLUDES="nope")
    if test "$XINCLUDES" = nope; then
        dirs="/usr/unsupported/include /usr/local/include /usr/X386/include /usr/include/X11R4 /usr/X11R5/include /usr/include/X11R5 /usr/openwin/include /usr/X11/include /usr/sww/include"
        for i in $dirs ; do
	    if test -r $i/X11/Intrinsic.h; then
	        XINCLUDES=" -I$i"
	    fi
        done
    fi
else
    if test "$x_includes" != ""; then
	XINCLUDES=-I$x_includes
    else
	XINCLUDES="# no special path needed"
    fi
fi
if test "$XINCLUDES" = nope; then
  echo "Warning:  couldn't find any X11 include files."
  XINCLUDES="# no include files found"
fi
AC_SUBST(XINCLUDES)

if test "$no_x" = yes; then
    XLIBSW=nope
    if test "$XLIBSW" = nope; then
	dirs="/usr/unsupported/lib /usr/local/lib /usr/X386/lib /usr/lib/X11R4 /usr/X11R5/lib /usr/lib/X11R5 /usr/openwin/lib /usr/X11/lib /usr/sww/X11/lib"
	for i in $dirs ; do
	    if test -r $i/libX11.a; then
		XLIBSW="-L$i -lX11"
	    fi
	done
    fi
else
    if test "$x_libraries" = ""; then
	XLIBSW=-lX11
    else
	XLIBSW="-L$x_libraries -lX11"
    fi
fi
if test "$XLIBSW" = nope ; then
    AC_CHECK_LIB(Xwindow, XCreateWindow, XLIBSW=-lXwindow)
fi
if test "$XLIBSW" = nope ; then
    echo "Warning:  couldn't find the X11 library archive.  Using -lX11."
    XLIBSW=-lX11
fi
AC_SUBST(XLIBSW)

#--------------------------------------------------------------------
#	Check for the existence of various libraries.  The order here
#	is important, so that then end up in the right order in the
#	command line generated by make.  The -lsocket and -lnsl libraries
#	require a couple of special tricks:
#	1. Only use these libraries if they supply procedures that aren't
#	   already present in the normal libraries.  This is because
#	   IRIX 5.2 has libraries, but they aren't needed and they're
#	   bogus:  they goof up name resolution if used.
#	2. On some SVR4 systems, can't use -lsocket without -lnsl too.
#	   To get around this problem, first check for both libraries
#	   together, and use them both if they're both needed.  If that
#	   isn't the case, then check for them individually.
#--------------------------------------------------------------------

AC_CHECK_LIB(Xbsd, main, [LIBS="$LIBS -lXbsd"])

tk_both=1
AC_FUNC_CHECK(connect, tk_both=0)
AC_FUNC_CHECK(gethostbyname, tk_both=0)
tk_oldLibs=$LIBS
LIBS="$LIBS -lsocket"
AC_CHECK_LIB(nsl, main, tk_both=0)
LIBS=$tk_oldLibs
if test "$tk_both" = 1; then
    echo "need -lsocket and -lnsl together"
    LIBS="$LIBS -lsocket -lnsl"
else
    AC_FUNC_CHECK(connect, ,
	    AC_CHECK_LIB(socket, main, [LIBS="$LIBS -lsocket"]))
    AC_FUNC_CHECK(gethostbyname, ,
	    AC_CHECK_LIB(nsl, main, [LIBS="$LIBS -lnsl"]))
fi

#------------------------------------------------------------------------------
#                       End code from Tk configure.in
#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#------------------------------------------------------------------------------
# Some versions of Sun OS require -ldl to link anything, even the
# small, empty programs generated by configure.  I don't know why, but
# we must check for it up front or other configure tests will fail.
#------------------------------------------------------------------------------

AC_CHECK_LIB(dl, dlopen, [LIBS="$LIBS -ldl"])

#------------------------------------------------------------------------------
#       Check for additional libraries the Tcl/Tk does not check for.
#------------------------------------------------------------------------------

# This is needed for DEC Alphas
AC_CHECK_LIB(dnet_stub, main, [LIBS="$LIBS -ldnet_stub"])

#------------------------------------------------------------------------------
#       Check for various Unix or library functions that can be used by TclX.
#       These must be after the library checks.
#------------------------------------------------------------------------------

AC_HAVE_FUNCS(getcwd select setitimer setvbuf sigaction setpgid getgroups)
AC_HAVE_FUNCS(bzero bcopy gethostbyname fsync getpriority strcoll gethostname)

#------------------------------------------------------------------------------
# Check for catgets.  Not the some systems (NetBSD 1.0) have catclose declared
# as type void rather than type int.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(catgets,
        [AC_DEFINE(HAVE_CATGETS)
         AC_MSG_RESULT(yes)
         AC_TRY_COMPILE([#include <nl_types.h>], [
                if (catclose ((nl_catd) 0) == 0) exit 0;],
                AC_MSG_RESULT("catclose ok"), [
                AC_MSG_RESULT("bad catclose return type")
                AC_DEFINE(BAD_CATCLOSE)])])


#------------------------------------------------------------------------------
#       Check for missing functions that we need.  They will be
#       compiled in the osSupport directory. Must check for SCO
#       -lintl, which is were strftime is hidden.  Also done after library
#       checks.
#------------------------------------------------------------------------------

AC_FUNC_STRFTIME
AC_CHECK_FUNC(random, ,[LIBOBJS="$LIBOBJS random.o"]
        AC_DEFINE(NO_RANDOM))
AC_CHECK_FUNC(rename, ,[LIBOBJS="$LIBOBJS rename.o"])

# SGI IRIX 4.0.5 has a broken strftime.
case `uname -sr 2>/dev/null` in
  IRIX\ 4.0.[1-5]*) LIBOBJS="$LIBOBJS strftime.o" ;;
esac

AC_SUBST(LIBOBJS)

#------------------------------------------------------------------------------
# Determine if random is declared in stdlib.h.  If it is, we don't want to
# redeclare it.  Some systems, such as the DEC Alpha, have random declared
# are returning int rather than long, since long is 64 bit.
#------------------------------------------------------------------------------

AC_HEADER_EGREP("random", stdlib.h, AC_DEFINE(STDLIB_DEFS_RANDOM))

#------------------------------------------------------------------------------
#       If Config.mk is not in the build directory, copy it local.
#------------------------------------------------------------------------------

if test ! -r Config.mk
then
    echo "Copying $srcdir/Config.mk to build directory"
    cp $srcdir/Config.mk  Config.mk || exit 1
fi

#------------------------------------------------------------------------------
#       Copy the tests to the build directory if they are not there.
#       We could do something fancier, but this is easy for now.
#------------------------------------------------------------------------------

if test ! -d tests
then
    echo "Copying $srcdir/tests contents to build directory"
    mkdir tests
    # Prevent line to long on some systems.
    CURDIR=`pwd`
    cd $srcdir/tests
    cp *.test *.tcl all $CURDIR/tests || exit 1
    cd $CURDIR
fi

#------------------------------------------------------------------------------
# Generate the make files.
#------------------------------------------------------------------------------

AC_SUBST(prefix)
AC_SUBST(execprefix)

AC_OUTPUT(Makefile osSupport/Makefile src/Makefile tclsrc/Makefile tksrc/Makefile tktclsrc/Makefile tools/Makefile tests/Makefile tktests/Makefile src/SYSLIBS tksrc/SYSLIBS)

