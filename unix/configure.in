dnl----------------------------------------------------------------------------
dnl configure.in -
dnl----------------------------------------------------------------------------
dnl  This file is an input file used by the GNU "autoconf" program to
dnl  generate the file "configure", which is run during Tcl installation
dnl  to configure the system for the local environment.  Many of these
dnl  checks are duplicates of those required by Tcl & Tk, since TclX
dnl  includes there internal header files.  The sections from Tcl and Tk
dnl  are grouped together and marked for easy sycning with Outerhout's
dnl  releases.
dnl
dnl  Although the generated configure script is under the GNU Public,
dnl  License Extended Tcl remains freely redistributable for any purpose,
dnl  including commercial use.
dnl----------------------------------------------------------------------------
dnl $Id: configure.in,v 5.13 1996/02/20 09:11:01 markd Exp $
dnl----------------------------------------------------------------------------
AC_INIT(../tcl/generic/tclExtend.h)
ifdef([AC_REVISION],AC_REVISION($Revision: 5.13 $),)dnl

# If `configure' is invoked (in)directly via `make', ensure that it
# encounters no `make' conflicts.  Ignore error if shell does not have
# unset.
#
unset MFLAGS MAKEFLAGS 2>/dev/null

#------------------------------------------------------------------------------
# System information and date for including in some files.
#------------------------------------------------------------------------------
if test -f /usr/lib/NextStep/software_version; then
    UNAME_OUT=NEXTSTEP-`awk '/3/,/3/' /usr/lib/NextStep/software_version`
else
    UNAME_OUT=`uname -s`-`uname -r`
fi
AC_SUBST(UNAME_OUT)

DATE_OUT=`date`
AC_SUBST(DATE_OUT)

#------------------------------------------------------------------------------
# If the --srcdir option has been used, make sure we are in a directory called
# "unix" and build the other output directories, configure will not do this.
#------------------------------------------------------------------------------

case `pwd` in
  */unix) ;;
  *) echo '*** Error: Should be in a directory named "unix".  If your using'
     echo 'the --srcdir option, create a directory called "unix" and run'
     echo 'configure from there.  Other build directories will be created'
     echo 'under the parent directory of "unix".'
     exit 1 ;;
esac
if test ! -d ../tcl ; then
   mkdir ../tcl || exit 1
fi
if test ! -d ../tcl/unix ; then
   mkdir ../tcl/unix || exit 1
fi
if test ! -d ../tk ; then
   mkdir ../tk || exit 1
fi
if test ! -d ../tk ; then
   mkdir ../tk || exit 1
fi

#------------------------------------------------------------------------------
# Check command line looking for the --with-tk=YES/NO option.
#------------------------------------------------------------------------------

AC_ARG_WITH(tk,
    [  --with-tk=YES|NO         build Tk specific code and wishx],
    [TKX_BUILD=$withval],
    [TKX_BUILD=YES])

case "$TKX_BUILD" in
    YES|yes)
        AC_MSG_RESULT(Will build Tk specific code and wishx)
        TKX_BUILD=YES
        ;;
    NO|no)
        AC_MSG_RESULT(Will not build Tk specific code and wishx)
        TKX_BUILD=NO
        ;;
     *)
        AC_MSG_ERROR(Invalid argument to --with-tk=, expected YES or NO)
        ;;
esac
AC_SUBST(TKX_BUILD)

#------------------------------------------------------------------------------
# Check command line looking for the --with-arch= option.
#------------------------------------------------------------------------------

AC_ARG_WITH(arch,
    [  --with-arch=ARCH        architecture suffix, appended .ARCH to the bin
                      and lib directory names],
    [TCLX_ARCH=.$withval
     AC_MSG_RESULT("An architecture suffix of \"$TCLX_ARCH\" will be appended to bin and lib directories")
    ],
    [AC_MSG_RESULT("No architecture suffix will be used")])
AC_SUBST(TCLX_ARCH)

#------------------------------------------------------------------------------
# Handle the --enable-master option.
#------------------------------------------------------------------------------

AC_ARG_ENABLE(master,
    [  --enable-master         enable master directory installation model],
    [AC_MSG_RESULT("Master installation model")
     TCLX_INST_BIN='${TCLX_INST_RUNTIME}/bin${ARCH}'
     TCLX_INST_LIB='${TCLX_INST_RUNTIME}/lib${ARCH}'
     TCLX_INST_INCL='${TCLX_INST_RUNTIME}/include'
     TCLX_INST_MAN='${TCLX_INST_RUNTIME}/man'
     TKX_INST_BIN='${TKX_INST_RUNTIME}/bin${ARCH}'
     TKX_INST_LIB='${TKX_INST_RUNTIME}/lib${ARCH}'
     TKX_INST_INCL='${TKX_INST_RUNTIME}/include'
     TKX_INST_MAN='${TKX_INST_RUNTIME}/man'
    ], 
    [AC_MSG_RESULT("Standard installation model")
     TCLX_INST_BIN='${TCLX_BIN}'
     TCLX_INST_LIB='${TCLX_LIB}'
     TCLX_INST_INCL='${TCLX_INCL}'
     TCLX_INST_MAN='${TCLX_MAN}'
     TKX_INST_BIN='${TCLX_BIN}'
     TKX_INST_LIB='${TCLX_LIB}'
     TKX_INST_INCL='${TCLX_INCL}'
     TKX_INST_MAN='${TCLX_MAN}'])

AC_SUBST(TCLX_INST_BIN)
AC_SUBST(TCLX_INST_LIB)
AC_SUBST(TCLX_INST_INCL)
AC_SUBST(TCLX_INST_MAN)
AC_SUBST(TKX_INST_BIN)
AC_SUBST(TKX_INST_LIB)
AC_SUBST(TKX_INST_INCL)
AC_SUBST(TKX_INST_MAN)

#------------------------------------------------------------------------------
# Define srcbasedir and bldbasedir as absolute paths to the top of the TclX
# tree.
#------------------------------------------------------------------------------

srcbasedir=`cd $srcdir/..; pwd`
AC_SUBST(srcbasedir)
bldbasedir=`cd ..; pwd`
AC_SUBST(bldbasedir)

#------------------------------------------------------------------------------
# Extract the version information out of tclExtend.h so it can be assigned
# to macros.
#------------------------------------------------------------------------------

AC_MSG_CHECKING(TclX versions)

eval `egrep '^#define T.*_FULL_VERSION' $srcbasedir/tcl/generic/tclExtend.h | \
      sed -e 's/#define //' -e 's/ *"/="/'`
AC_MSG_RESULT($TCLX_FULL_VERSION)
AC_SUBST(TCLX_FULL_VERSION)
AC_SUBST(TKX_FULL_VERSION)

#------------------------------------------------------------------------------
# Generate tmp makefile that outputs macro values in Config.mk as shell
# variables.  Validate that we can find Tcl and Tk files.  Note, we have to
# deal with 3 parsings by the shell plus a parsing by make, use care in
# changing this.
#------------------------------------------------------------------------------

AC_MSG_CHECKING(macro values from Config.mk)
cat Config.mk >confmakefile
echo "srcbasedir=$srcbasedir" >>confmakefile
echo "bldbasedir=$bldbasedir" >>confmakefile
echo "all:" >>confmakefile
echo '	@echo TCL_CONFIG=\"${TCL_CONFIG}\"' >>confmakefile
echo '	@echo TK_CONFIG=\"${TK_CONFIG}\"' >>confmakefile

eval `${MAKE-make} -f confmakefile`
rm confmakefile

if test ! -e "$TCL_CONFIG" ; then
    AC_MSG_ERROR(Config.mk does not set TCL_CONFIG to a valid path to tclConfig.sh)
fi
if test "$TKX_BUILD" = "YES"; then
    if test ! -e "$TK_CONFIG" ; then
        AC_MSG_ERROR(Config.mk does not set TK_CONFIG to a valid path to tkConfig.sh)
    fi
fi
AC_MSG_RESULT(ok)

# Get defines from tclConfig.sh
. $TCL_CONFIG

LIBS=$TCL_LIBS   # Need for tests.

AC_SUBST(TCL_DEFS)
AC_SUBST(TCL_LIBS)
AC_SUBST(TCL_DL_LIBS)
AC_SUBST(TCL_LD_FLAGS)
AC_SUBST(TCL_RANLIB)

# Get defines from tkConfig.sh
if test "$TKX_BUILD" = "YES"; then
   . $TK_CONFIG
fi
AC_SUBST(TK_DEFS)
AC_SUBST(TK_LIBS)
AC_SUBST(TK_XINCLUDES)
AC_SUBST(TK_XLIBSW)

#------------------------------------------------------------------------------
# Check for various programs used during the build.  If the CC environment
# variable is not set, the compiler used to build Tcl is used.
#------------------------------------------------------------------------------

AC_MSG_CHECKING(which C compiler to use)
if test "X$CC" = "X"; then
    CC=$TCL_CC
    AC_MSG_RESULT(using C compiler specified in tclConfig.sh)
else
    AC_MSG_RESULT(using C compiler specified in by CC env var)
fi
AC_SUBST(CC)

#------------------------------------------------------------------------------
# Determine if we have symbolic links on the filesystem we are building
# on.  They are needed the setup the help so the help test will work.
# If we don't have them, we have to copy the files.
#------------------------------------------------------------------------------
AC_PROG_LN_S
if test "$LN_S" = "ln"; then
    HAVE_SYML="NO"
else
    HAVE_SYML="YES"
fi
AC_SUBST(HAVE_SYML)

#------------------------------------------------------------------------------
# Some make programs require includes to be 
#     .include "file"
# others...
#     include file
# Checks the MAKE environment variable for the name of the make command to use.
#------------------------------------------------------------------------------

AC_MSG_CHECKING("how make handles includes")
cat > confmakeinc <<EOF

EOF
  cat > confmakefile <<EOF
include confmakeinc

all:
EOF

if ${MAKE-make} -f confmakefile >/dev/null 2>/dev/null; then
    MAKEINCLUDE="include"
    MAKEQUOTE=''
    AC_MSG_RESULT(common make include syntax)
else
    MAKEINCLUDE=".include"
    MAKEQUOTE='"'
    AC_MSG_RESULT(BSD make include syntax)
fi
rm confmakefile confmakeinc

AC_SUBST(MAKEINCLUDE)
AC_SUBST(MAKEQUOTE)

#------------------------------------------------------------------------------
# Check for system header files.
#------------------------------------------------------------------------------

AC_HEADER_CHECK(limits.h, , AC_DEFINE(NO_LIMITS_H))

#------------------------------------------------------------------------------
# Check for missing typedefs.
#------------------------------------------------------------------------------

AC_CHECK_TYPE(clock_t, long)
AC_CHECK_TYPE(time_t, long)
AC_CHECK_TYPE(off_t, long)

#------------------------------------------------------------------------------
# What type do signals return?
#------------------------------------------------------------------------------

AC_RETSIGTYPE

#------------------------------------------------------------------------------
# Test to see if "times" returns a status or the amount of elapsed real time.
#------------------------------------------------------------------------------

AC_MSG_CHECKING(checking to see what 'times' returns)
AC_TRY_RUN([
#include <sys/types.h>
#include <sys/times.h>
main() {
struct tms cpu;
times (&cpu);
sleep (2);
if (times (&cpu) > 0)
     exit (0);
else 
     exit (1);
}
], [AC_MSG_RESULT(elapsed real time)],
   [AC_MSG_RESULT(a status)
    AC_DEFINE(TIMES_RETS_STATUS)],
   [AC_MSG_ERROR(cross-compiling not supported)])

#------------------------------------------------------------------------------
#     Determine if "." is used as separator for the manual directory
#     names.  i.e. man/man.1 vs man/man1
#------------------------------------------------------------------------------

AC_MSG_CHECKING(man directory/section separator)
mandirs="/usr/man/man.1 /usr/man/cat.1 /usr/share/man.1 /usr/share/cat.1
         /usr/man/u_man/man.1 /usr/man/cat.C"
gotdotdir="NO"
for d in $mandirs
do
    if test -d $d
    then
        gotdotdir="YES"
    fi
done

mandirs="/usr/man/man1   /usr/man/cat1   /usr/share/man1   /usr/share/man1
         /usr/man/man1.Z /usr/man/cat1.Z /usr/share/man1.Z /usr/share/man1.Z
         /usr/man/u_man/man1 /usr/share/man/man1"
gotnodotdir="NO"
for d in $mandirs
do
    if test -d $d
    then
        gotnodotdir="YES"

    fi
done

if test $gotdotdir = YES -a $gotnodotdir = NO
then
    MAN_DIR_SEPARATOR="."
    AC_MSG_RESULT(man/man.1 style)
elif test $gotdotdir = NO -a $gotnodotdir = YES
then
    MAN_DIR_SEPARATOR=""
    AC_MSG_RESULT(man/man1 style)
else
    MAN_DIR_SEPARATOR=""
    AC_MSG_RESULT([WARNING: couldn't determine, assuming man/man1 style])
fi
AC_SUBST(MAN_DIR_SEPARATOR)

#------------------------------------------------------------------------------
# Check for additional libraries the Tcl/Tk does not check for.
#------------------------------------------------------------------------------

# This is needed for DEC Alphas
AC_CHECK_LIB(dnet_stub, main, [TCLX_LIBS="$TCLX_LIBS -ldnet_stub"])

#------------------------------------------------------------------------------
# Older SCO systems don't have ftruncate, but have chsize in libx.  Newer
# versions have both.  Only check for chsize in libx if we don't have
# truncate.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(ftruncate, ,
        [AC_DEFINE(NO_FTRUNCATE)
         AC_CHECK_LIB(x, chsize,
                [AC_DEFINE(HAVE_CHSIZE)
                 [TCLX_LIBS="$TCLX_LIBS -lx"]])])

#------------------------------------------------------------------------------
# Check for various Unix or library functions that can be used by TclX.
# These must be after the library checks.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(select, , AC_DEFINE(NO_SELECT))
AC_CHECK_FUNC(setitimer, , AC_DEFINE(NO_SETITIMER))
AC_CHECK_FUNC(sigaction, , AC_DEFINE(NO_SIGACTION))
AC_CHECK_FUNC(setpgid, , AC_DEFINE(NO_SETPGID))
AC_CHECK_FUNC(getgroups, , AC_DEFINE(NO_GETGROUPS))
AC_HAVE_FUNCS(bzero, , AC_DEFINE(NO_BZERO))
AC_CHECK_FUNC(bcopy, , AC_DEFINE(NO_BCOPY))
AC_CHECK_FUNC(fsync, , AC_DEFINE(NO_FSYNC))
AC_CHECK_FUNC(getpriority, , AC_DEFINE(NO_GETPRIORITY))
AC_CHECK_FUNC(strcoll, , AC_DEFINE(NO_STRCOLL))
AC_CHECK_FUNC(fchown, , AC_DEFINE(NO_FCHOWN))
AC_CHECK_FUNC(fchmod, , AC_DEFINE(NO_FCHMOD))
AC_CHECK_FUNC(truncate, , AC_DEFINE(NO_TRUNCATE))
AC_CHECK_FUNC(waitpid, , AC_DEFINE(NO_WAITPID))

#------------------------------------------------------------------------------
# Test for socket related functions.  Note that "socket" is just used to
# determine if we have sockets at all.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(socket, , AC_DEFINE(NO_SOCKET))
AC_CHECK_FUNC(inet_aton, , AC_DEFINE(NO_INET_ATON))
AC_CHECK_FUNC(gethostname, , AC_DEFINE(NO_GETHOSTNAME))

#------------------------------------------------------------------------------
# Check for catgets.  Not the some systems (NetBSD 1.0) have catclose declared
# as type void rather than type int.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(catgets,
    [AC_MSG_CHECKING([catclose return value])
     AC_TRY_COMPILE([#include <nl_types.h>], [
        if (catclose ((nl_catd) 0) == 0) exit (0);],
        AC_MSG_RESULT(ok), [
        AC_MSG_RESULT([broken catclose return type])
        AC_DEFINE(BAD_CATCLOSE)])]
    [AC_DEFINE(NO_CATGETS)])

#------------------------------------------------------------------------------
# Check for missing functions that we need.  Must be done after library checks.
#------------------------------------------------------------------------------

AC_CHECK_FUNC(random, ,[LIBOBJS="$LIBOBJS random.o"]
              AC_DEFINE(NO_RANDOM))
AC_CHECK_FUNC(rename, ,[LIBOBJS="$LIBOBJS rename.o"])
AC_SUBST(LIBOBJS)

#------------------------------------------------------------------------------
# Determine if random is declared in stdlib.h.  If it is, we don't want to
# redeclare it.  Some systems, such as the DEC Alpha, have random declared
# are returning int rather than long, since long is 64 bit.
#------------------------------------------------------------------------------

AC_HEADER_EGREP("random", stdlib.h, AC_DEFINE(STDLIB_DEFS_RANDOM))

#------------------------------------------------------------------------------
#       If Config.mk is not in the build directory, copy it local.
#------------------------------------------------------------------------------

if test ! -r Config.mk
then
    echo "Copying $srcdir/Config.mk to build directory"
    cp $srcdir/Config.mk  Config.mk || exit 1
fi

#------------------------------------------------------------------------------
# Generate the make files.
#------------------------------------------------------------------------------

AC_SUBST(TCLX_LIBS)
TCLX_DEFS=$DEFS
AC_SUBST(TCLX_DEFS)

AC_SUBST(prefix)
AC_SUBST(execprefix)

AC_OUTPUT(Makefile Common.mk tools/Makefile ../tcl/unix/Makefile ../tk/unix/Makefile ../tcl/unix/tclxConfig.sh ../tk/unix/tkxConfig.sh)

